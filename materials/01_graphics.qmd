---
title: "Africast-Time Series Analysis & Forecasting Using R"
subtitle: "2. Time series patterns and basic graphics"
---

## Outline

\vspace*{0.7cm}\tableofcontents

```{r}
#| label: setup
#| include: false
#| cache: false
source("setup.R")
```

# Time series Patterns

## Key patterns of time series

- Level
- Underlying trend
- Seasonal/cycle
- Autocorrelation
- Unpredictable patterns/Noise

- Different types of events and driving factors (i.e. predictors) may affect the time series 

## Time series patterns

Level
  : The *level* of a time series describes the center of the series.
  
Trend
  : A *trend* describes predictable increases or decreases in the level of a series.

Seasonal
  : *Seasonality* is a consistent pattern that repeats over a fixed period of time. pattern exists when a series is influenced by seasonal factors (e.g., the quarter of the year, the month, or day of the week).

Cyclic
  : pattern exists when data exhibit rises and falls that are \emph{not of fixed period} (duration usually of at least 2 years).

## Level

```{r level, fig.align='center', echo=FALSE, out.width="100%"}
set.seed(2)
demand_level <- list(ts(rep(100,4*7),frequency=4,start=c(2016,1)),
                ts(rpois(4*7,100),frequency=4,start=c(2016,1)))
 
opar <- par(mfrow=c(1,2),mai=c(.9,.9,.1,.2))
                for ( ii in 1:2 ) {
                                plot(demand_level[[ii]],xlab="Quarter",ylab=NA,las=1,pch=19,type="o")
                                abline(h=100,lty=3)
                                if ( ii == 1 ) legend("bottomleft",bty = "n",lty=c(1,3),pch=c(19,NA),lwd=1,legend=c("Demand","Level"))
                }
par(opar)

```

## Trend

```{r trend, fig.align='center', echo=FALSE,out.width="100%"}
set.seed(2)
demand_trend <- list(ts(rep(100,7*4)+c(1:7*4)+round(rnorm(28,0,5)), frequency=4,start=c(2016,1)),
                ts(rep(100,7*4)+c(1:(7*4)), frequency=4,start=c(2016,1)),
                ts(rep(100,7*4)-c(1:(7*4))+round(rnorm(28,0,5)), frequency=4,start=c(2016,1)),
                ts(rep(100,7*4)-c(1:(7*4)), frequency=4,start=c(2016,1)))

opar <- par(mfrow=c(1,2),mai=c(.9,.9,.1,.2))
plot(demand_trend[[1]],xlab="Quarter",ylab="Demand",las=1,pch=19,type="o")
lines(demand_trend[[2]],lty=3)
plot(demand_trend[[3]],xlab="Quarter",ylab=NULL,las=1,pch=19,type="o")
legend("bottom",lty=c(1,3),pch=c(19,NA),lwd=1,legend=c("Demand","Trend"), bty = "n")
lines(demand_trend[[4]],lty=3)
par(opar)

```

## Seasonality

```{r additive-seasonality, echo=FALSE, fig.align='center',out.width="100%"}
set.seed(2)
demand_additive_seasonality <- list(ts(rep(100,7*4)+rep(c(10,15,-20,-5),7), frequency=4,start=c(2016,1)),
                ts(rep(100,7*4), frequency=4,start=c(2016,1)))
plot(demand_additive_seasonality[[1]],xlab="Quarter",ylab="Demand",las=1,pch=19,type="o", ylim=c(60,130))
lines(demand_additive_seasonality[[2]],lty=3)
legend("bottom",lty=c(1,3),pch=c(19,NA),lwd=1,legend=c("Demand","Level"), bty = "n")
```

## Additive versus multiplicative seasonality

```{r trend-both-seasonality, echo=FALSE, out.width="100%", fig.align='center'}
set.seed(2)
demand_trend_additive_seasonality <- list(ts(rep(100,7*4)+c(1:28)+rep(c(10,15,-20,-5),7), frequency=4,start=c(2016,1)),
                ts(rep(100,7*4)+c(1:28), frequency=4,start=c(2016,1)))

demand_trend_multiplicative_seasonality <- list(ts((rep(10,7*4)+c(0,5*(1:(4*7-1))))*rep(c(.4,1.6,1.2, .8),7)+round(rnorm(7*4,0,5)), frequency=4,start=c(2016,1)),
                ts((rep(10,7*4)+c(0,5*(1:(4*7-1)))), frequency=4,start=c(2016,1)))

opar <- par(mfrow=c(1,2),mai=c(.9,.9,.1,.2))
plot(demand_trend_additive_seasonality[[1]],xlab="Quarter",ylab="Demand",las=1,pch=19,type="o")
lines(demand_trend_additive_seasonality[[2]],lty=3)
legend("topleft",lty=c(1,3),pch=c(19,NA),lwd=1,legend=c("Demand","Trend"), bty = "n")
plot(demand_trend_multiplicative_seasonality[[1]],xlab="Quarter",ylab='',las=1,pch=19,type="o")
lines(demand_trend_multiplicative_seasonality[[2]],lty=3)
legend("topleft",lty=c(1,3),pch=c(19,NA),lwd=1,legend=c("Demand","Trend"), bty = "n")

par(opar)

```

## Cycles

```{r cement, echo=FALSE, fig.align='center',out.width="100%", message=FALSE, warning=FALSE}
ts_cement <- fpp2::qcement
plot(window(ts_cement, 1980), ylab="Cement Production ")
abline(v=1983, lty=3)
abline(v=1991, lty=3)
abline(v=2001, lty=3)
abline(v=2009, lty=3)
```

# Time plots

## Time plots

\small

```{r, echo=TRUE, fig.height=3}
ansett %>%
  filter(Airports=="MEL-SYD", Class=="Economy") %>%
  autoplot(Passengers)
```

## Time plots

\small

```{r a10-plot, echo=TRUE, dependson="a10", fig.height=2.5}
PBS %>% filter(ATC2 == "A10") %>%
  summarise(Cost = sum(Cost)/1e6) %>% autoplot(Cost) +
  ylab("$ million") + xlab("Year") +
  ggtitle("Antidiabetic drug sales")
```


# Seasonal plots

## Seasonal plots

  * Data plotted against the individual "seasons" in which the data were observed.  (In this case a "season" is a month.)
  * Something like a time plot except that the data from each season are overlapped.
  * Enables the underlying seasonal pattern to be seen more clearly, and also allows any substantial departures from the seasonal pattern to be easily identified.
  * In R: `gg_season()`

## Quarterly Australian Beer Production

```{r, fig.height=2.7}
beer <- aus_production |>
  select(Quarter, Beer) |>
  filter(year(Quarter) >= 1992)
beer |> autoplot(Beer)
```

## Quarterly Australian Beer Production

```{r}
beer |> gg_season(Beer, labels = "right")
```

## Multiple seasonal periods
\fontsize{10}{11}\sf

```{r}
vic_elec
```

## Multiple seasonal periods

```{r, dev = "ragg_png", dpi = 180}
vic_elec |> gg_season(Demand)
```

## Multiple seasonal periods

```{r, dev = "ragg_png", dpi = 180}
vic_elec |> gg_season(Demand, period = "week")
```

## Multiple seasonal periods

```{r, dev = "ragg_png", dpi = 180}
vic_elec |> gg_season(Demand, period = "day")
```

## Seasonal subseries plots

  * Data for each season collected together in time plot as separate time series.
  * Enables the underlying seasonal pattern to be seen clearly, and changes in seasonality over time to be visualized.
  * In R: `gg_subseries()`

## Quarterly Australian Beer Production

```{r}
beer |> gg_subseries(Beer)
```

## Australian holidays
\fontsize{9}{10}\sf

```{r holidays}
holidays <- tourism |>
  filter(Purpose == "Holiday") |>
  group_by(State) |>
  summarise(Trips = sum(Trips))
```

```{r, echo=FALSE}
holidays
```

## Australian holidays
\fontsize{9}{10}\sf

```{r holidays-plot, echo=TRUE, dependson="holidays", fig.height=3.1}
holidays |> autoplot(Trips) +
  labs(y = "thousands of trips", title = "Australian domestic holiday nights")
```

## Seasonal plots
\fontsize{9}{10}\sf

```{r graphics1, fig.width=6, fig.height=6, out.width="42%"}
holidays |> gg_season(Trips) +
  labs(y = "thousands of trips", title = "Australian domestic holiday nights")
```

## Seasonal subseries plots
\fontsize{9}{10}\sf

```{r graphics2, fig.height=5.5, fig.width=12.5, out.height="73%"}
holidays |> gg_subseries(Trips) +
  labs(y = "thousands of trips", title = "Australian domestic holiday nights")
```

## Calendar plots

```{r sugrrants, eval=FALSE}
library(sugrrants)
vic_elec |>
  filter(year(Date) == 2014) |>
  mutate(Hour = hour(Time)) |>
  frame_calendar(x = Hour, y = Demand, date = Date, nrow = 4) |>
  ggplot(aes(x = .Hour, y = .Demand, group = Date)) +
  geom_line() -> p1
prettify(p1,
  size = 3,
  label.padding = unit(0.15, "lines")
)
```

* `frame_calendar()` makes a compact calendar plot
* `facet_calendar()` provides an easier ggplot2 integration.

## Calendar plots
\fontsize{10}{11}\sf

```{r sugrrants2, ref.label="sugrrants", echo=FALSE, out.height="90%", fig.height=5.4, fig.width=9}
```

# Seasonal or cyclic?

## Time series patterns

Trend
  : pattern exists when there is a long-term increase or decrease in the data.

Seasonal
  : pattern exists when a series is influenced by seasonal factors (e.g., the quarter of the year, the month, or day of the week).

Cyclic
  : pattern exists when data exhibit rises and falls that are \emph{not of fixed period} (duration usually of at least 2 years).

## Time series components

### Differences between seasonal and cyclic patterns:

* seasonal pattern constant length; cyclic pattern variable length
* average length of cycle longer than length of seasonal pattern
* magnitude of cycle more variable than magnitude of seasonal pattern

## Time series patterns
\fontsize{10}{10}\sf

```{r, fig.height=2.7}
aus_production |>
  filter(year(Quarter) >= 1980) |>
  autoplot(Electricity) +
  labs(y = "GWh", title = "Australian electricity production")
```

## Time series patterns
\fontsize{10}{10}\sf

```{r, warning=FALSE, fig.height=2.7}
aus_production |>
  autoplot(Bricks) +
  labs(title = "Australian clay brick production",
       x = "Year", y = "million units")
```

## Time series patterns
\fontsize{10}{10}\sf

```{r, fig.height=2.7}
us_employment |>
  filter(Title == "Retail Trade", year(Month) >= 1980) |>
  autoplot(Employed / 1e3) +
  labs(title = "Retail employment, USA", y = "Million people")
```

## Time series patterns
\fontsize{10}{10}\sf

```{r, fig.height=2.7}
gafa_stock |>
  filter(Symbol == "AMZN", year(Date) >= 2018) |>
  autoplot(Close) +
  labs(title = "Amazon closing stock price", x = "Day", y = "$")
```

## Time series patterns
\fontsize{10}{10}\sf

```{r, fig.height=2.7}
pelt |>
  autoplot(Lynx) +
  labs(title = "Annual Canadian Lynx Trappings",
       x = "Year", y = "Number trapped")
```

## Seasonal or cyclic?

\alert{Differences between seasonal and cyclic patterns:}

  * seasonal pattern constant length; cyclic pattern variable length
  * average length of cycle longer than length of seasonal pattern
  * magnitude of cycle more variable than magnitude of seasonal pattern

\pause

\begin{alertblock}{}
The timing of peaks and troughs is predictable with seasonal data, but unpredictable in the long term with cyclic data.
\end{alertblock}

# Lag plots and autocorrelation

## Example: Beer production
\fontsize{10}{11}\sf

```{r}
new_production <- aus_production |>
  filter(year(Quarter) >= 1992)
new_production
```

## Example: Beer production
\fontsize{13}{15}\sf

```{r, fig.height=6.5, fig.width=6.5, out.width="7cm"}
new_production |> gg_lag(Beer)
```

## Example: Beer production
\fontsize{13}{15}\sf

```{r, fig.height=6.5, fig.width=6.5, out.width="7cm"}
new_production |> gg_lag(Beer, geom = "point")
```

## Lagged scatterplots

  * Each graph shows $y_t$ plotted against $y_{t-k}$ for
different values of $k$.
  * The autocorrelations are the correlations associated
with these scatterplots.
  * ACF (autocorrelation function):
     * $r_1=\text{Correlation}(y_{t}, y_{t-1})$
     * $r_2=\text{Correlation}(y_{t}, y_{t-2})$
     * $r_3=\text{Correlation}(y_{t}, y_{t-3})$
     * etc.
  * If there is **seasonality**, the ACF at the seasonal lag (e.g., 12 for monthly data) will be **large and positive**.

## Autocorrelation

Results for first 9 lags for beer data:
\fontsize{10}{11}\sf

```{r, echo=TRUE}
new_production |> ACF(Beer, lag_max = 9)
```

## Autocorrelation

Results for first 9 lags for beer data:
\fontsize{10}{11}\sf

```{r beeracf, fig.height=2.5}
new_production |>
  ACF(Beer, lag_max = 9) |>
  autoplot()
```

## ACF

```{r, fig.height=3, echo=TRUE}
new_production |>
  ACF(Beer) |>
  autoplot()
```

## Australian holidays
\fontsize{10}{11}\sf

```{r tourismacf}
holidays |> ACF(Trips)
```

## Australian holidays

```{r tourismacf2, fig.height=5, fig.width=5, out.width="49%"}
holidays |> ACF(Trips) |> autoplot()
```

## Trend and seasonality in ACF plots

- When data have a trend, the autocorrelations for small lags tend to be large and positive.
- When data are seasonal, the autocorrelations will be larger at the seasonal lags (i.e., at multiples of the seasonal frequency)
- When data are trended and seasonal, you see a combination of these effects.

## US retail trade employment

```{r}
retail <- us_employment |>
  filter(Title == "Retail Trade", year(Month) >= 1980)
retail |> autoplot(Employed)
```

## US retail trade employment

```{r}
retail |>
  ACF(Employed, lag_max = 48) |>
  autoplot()
```

## Google stock price
\fontsize{10}{11}\sf

```{r google-2015}
google_2015 <- gafa_stock |>
  filter(Symbol == "GOOG", year(Date) == 2015) |>
  select(Date, Close)
google_2015
```

## Google stock price

```{r}
google_2015 |> autoplot(Close)
```

## Google stock price

```{r}
google_2015 |>
  ACF(Close, lag_max = 100) |>
  autoplot()
```

## Which is which?

```{r, fig.height=6, fig.width=12, echo=FALSE, warning=FALSE, out.width="100%"}
cowtemp <- as_tsibble(fma::cowtemp)
USAccDeaths <- as_tsibble(USAccDeaths)
AirPassengers <- as_tsibble(AirPassengers)
mink <- as_tsibble(fma::mink)
tp1 <- autoplot(cowtemp, value) + labs(x = "") + labs(y = "chirps per minute") +
  labs(title = "1. Daily temperature of cow")
tp2 <- autoplot(USAccDeaths, value) + labs(x = "") + labs(y = "thousands") +
  labs(title = "2. Monthly accidental deaths")
tp3 <- autoplot(AirPassengers, value) + labs(x = "") + labs(y = "thousands") +
  labs(title = "3. Monthly air passengers")
tp4 <- autoplot(mink, value) + labs(x = "") + labs(y = "thousands") +
  labs(title = "4. Annual mink trappings")
acfb <- ACF(cowtemp, value) |> autoplot() + labs(x = "") + labs(title = "B") + ylim(-0.5, 1)
acfa <- ACF(USAccDeaths, value) |> autoplot() + labs(x = "") + labs(title = "A") + ylim(-0.5, 1)
acfd <- ACF(AirPassengers, value) |> autoplot() + labs(x = "") + labs(title = "D") + ylim(-0.5, 1)
acfc <- ACF(mink, value) |> autoplot() + labs(x = "") + labs(title = "C") + ylim(-0.5, 1)
gridExtra::grid.arrange(tp1, tp2, tp3, tp4,
  acfa, acfb, acfc, acfd,
  nrow = 2
)
```

# White noise

## Example: White noise
\fontsize{11}{13}\sf

```{r, fig.height=3.3}
wn <- tsibble(t = seq(36), y = rnorm(36), index = t)
wn |> autoplot(y)
```

\only<2>{
\begin{textblock}{10}(1.4,6.7)\fontsize{13}{15}\sf
\begin{alertblock}{}
White noise data is uncorrelated across time with zero mean and constant variance.

(Technically, we require independence as well.)
\end{alertblock}
\end{textblock}}

## Example: White noise
\fontsize{10}{10}\sf

```r
wn |> ACF(y)
```

\fontsize{10}{10}\sf\tabcolsep=0.1cm

```{r wnacf, echo=FALSE, dependson="wn"}
wn |>
  ACF(y, lag_max = 10) |>
  as_tibble() |>
  mutate(lag = as.numeric(lag)) |>
  pivot_wider(names_from = lag, values_from = acf) |>
  rename_all(function(x) {
    paste("$r_{", x, "}$", sep = "")
  }) |>
  knitr::kable(
    booktabs = TRUE,
    escape = FALSE, align = "c", digits = 3,
    format.args = list(nsmall = 3)
  )
```

```{r, echo=FALSE, fig.height=1.5}
wn |>
  ACF(y) |>
  autoplot()
```

\pause\fontsize{13}{15}\sf

 * Sample autocorrelations for white noise series.
 * Expect each autocorrelation to be close to zero.
 * Blue lines show 95% critical values.

## Example: Pigs slaughtered

\fontsize{11}{12}\sf

```{r, fig.height=2.5}
pigs <- aus_livestock |>
  filter(State == "Victoria", Animal == "Pigs", year(Month) >= 2014)
pigs |> autoplot(Count / 1e3) +
  labs(x = "Year", y = "Thousands",
       title = "Number of pigs slaughtered in Victoria")
```

## Example: Pigs slaughtered

```{r}
pigs |>
  ACF(Count) |>
  autoplot()
```

## Example: Pigs slaughtered

Monthly total number of pigs slaughtered
in the state of Victoria, Australia, from January 2014 through December 2018
(Source: Australian Bureau of Statistics.)\pause

  * Difficult to detect pattern in time plot.
  * ACF shows significant autocorrelation for lag 2 and 12.
  * Indicate some slight seasonality.

\pause

These show the series is **not a white noise series**.

